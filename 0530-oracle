1.多表查询
	a.笛卡尔积
	两张表不做任何关联产生的数据
	emp
		empno  员工号
		ename  员工名字
		job    职位
		mgr    上司的员工号
		hiredate 入职日期
		sal     薪资
		comm    佣金
		deptno  部门号
	dept
		deptno  部门号
		dname   部门名称
		loc     部门所在位置
	select * from emp;
	select * from dept;
	select * from emp,dept;
	b.内联查询
	语法:
		select 列 from 表1,表2 where 表1.列=表2.列;
		select 列 from 表1 inner join 表2 on 表1.列=表2.列;
	关联列
		名字相同
		作用一致
		主外键关系
	需求:查询SCOTT的部门名称
		1.分析列
			员工名字
			部门名称
		2.分析表
			emp
			dept
		3.关联
			select * from emp e inner join dept d on e.deptno=d.deptno;
		4.过滤
			select d.dname from emp e inner join dept d 
			on e.deptno=d.deptno
			and e.ename='SCOTT';
	需求:查询scott的上司的名字(自联查询)
		select a.ename,b.ename from emp a,emp b 
		where a.mgr=b.empno
		and a.ename='SCOTT';
	c.左联查询、右联查询
		左联:
		select 列 from 左表 left join 右表 on 左表.列=右表.列;
		左联查询左表中所有数据都有
		查询出来结果，内联查询结果+左表中有，右表中没有的，右表对应为空
		create table a(
			a number
		);
		insert into a values(1);
		insert into a values(2);
		insert into a values(3);
		create table b (
			a number,
			b char(10)
		);
		insert into b values(1,'a');
		insert into b values(2,'b');		
		insert into b values(4,'d');
		commit;
		select * from a left join b on a.a=b.a;
		右联:
		select 列 from 左表 right join 右表 on 左表.列=右表.列;
		右联查询是右表中所有数据都有
2.分组查询
	按照某种条件进行分类
	select 列 from 表
		where 条件
			group by 分组条件
				having 分组后过滤条件
	a.分组(聚合)函数
		max()    最大
		min()    最小
		avg()    平均
		sum()    求和
		count()  计数
		需求:查询emp表中最高工资，最低工资，平均工资
		select max(sal),min(sal),avg(sal) from emp;
	b.分组
		select deptno from emp group by deptno;
		select deptno,count(ename) from emp group by deptno;
		需求:查询每个部门地址下有多少员工？
		1>分析列
			部门地址
			员工名字
		2>分析表
			部门地址 dept
			员工名字 emp
		3>关联
			select * from dept d,emp e 
			where d.deptno=e.deptno;
		4>过滤
			select d.loc,count(e.ename) from dept d,emp e 
			where d.deptno=e.deptno
			group by d.loc;
	c.分组后过滤
		having 分组后过滤 可以直接跟分组函数
		where  分组前过滤 不能直接跟分组函数
		需求:查询员工数量超过5的部门地址
			select d.loc,count(e.ename) from dept d,emp e 
			where d.deptno=e.deptno
			group by d.loc
			having count(e.ename)>5;		
	--查询每个人有几门课程
		1.
		  学员名字
		  课程名字
		2.
		  学员
		  课程
		  分数
		3.
		  select  * from stscore st,student s,course co
		  where st.studentid=s.studentid
		  and  co.courseid=st.courseid;
		4.
		  select s.sname,count(c.cname) from stscore st,student s,course co
		  where st.studentid=s.studentid
		  and  co.courseid=st.courseid
		  group by s.sname;
		--查询每门课程的最高分、最低分
		1.
		  课程名字
		  分数
		2.
		  课程表
		  分数表
		3.
		  select * from course co,stscore st
		  where co.courseid=st.courseid;
		4.
		  select co.cname,max(score),min(score) from course co,stscore st
		  where co.courseid=st.courseid
		  group by co.cname ;
		--查询826班所有课程的最高分、最低分
		1.
		  班级名
		  课程名
		  分数
		2.
		  班级表
		  分数表
		  学员表
		  课程表
		3.
		  select  *  from class c,course co,student s,stscore st
		  where c.classid=s.classid
		  and   co.courseid=stscore.courseid
		  and   s.studentid=st.studentid;
		4.
		  select  co.cname,max(st.score),min(st.score)  from class c,course co,student s,stscore st
		  where c.classid=s.classid
		  and   co.courseid=st.courseid
		  and   s.studentid=st.studentid
		  and   c.classname='826'
		  group by co.cname;
	 
		 --查询826班oracle课程的最高分最低分
		   select  co.cname,max(st.score),min(st.score)  from class c,course co,student s,stscore st
		  where c.classid=s.classid
		  and   co.courseid=st.courseid
		  and   s.studentid=st.studentid
		  and   c.classname='826'
		  and co.cname='ORACLE'
		  group by co.cname;
3.子查询
	一条SQL语句的执行依赖于另外一条SQL语句的执行结果
	需求:查询scott的上司的名字
		a.查询emp表中满足条件的mgr
			select mgr from emp where ename='SCOTT';
		b.查询emp表中empno为上面查询出来结果的名字
			select ename from emp where empno=(select mgr from emp where ename='SCOTT');
	需求:查询薪资范围800和2000之间员工所在部门名称
		a.查询emp表中满足条件的deptno
			select deptno from emp where sal between 800 and 2000;
		b.查询dept表中deptno为上面查询出来结果的部门名称
			select dname from dept where deptno=(select deptno from emp where sal between 800 and 2000);
	子查询分为单行子查询和多行子查询
		单行子查询 查询子句返回结果是一个 可以用=，也可以用in
		多行子查询 查询子句返回结果是多个 只能in,all,any
	all()   所有
	any()   任何一个
		需求:查询工资高于20号部门任何一个员工的工资的人的所有信息
		a.查询满足条件的工资
			select sal from emp where deptno=20;
		b.查询大于上面查出工资的任意一个的所有信息
			select * from emp where sal >any(select sal from emp where deptno=20);
			


		  

